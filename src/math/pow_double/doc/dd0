;          1         2         3         4         5         6         7
;01234567890123456789012345678901234567890123456789012345678901234567890
;=======================================================================
;+---------------------------------------------------------------------+
;| FUNCTION: pow_double                                                |
;+---------------------------------------------------------------------+
;| DESCRIPTION: Calculate floating-point power operation, such as      |
;|              2.15^3.18                                              |
;|                                                                     |
;|                                                                     |
;+---------------------------------------------------------------------+
;| REQUIRES: ---                                                       |
;+---------------------------------------------------------------------+
;| PROCESS DESCRIPTION:                                                |
;|                                                                     |
;|   pow_double( x:64bit, y:64bit ) : 64bit                            |
;|                                                                     |
;|   Input parameters                                                  |
;|     1) x = base value                                               |
;|     2) y = power value                                              |
;|                                                                     |
;|   Output parameters                                                 |
;|     ---                                                             |
;|                                                                     |
;|   Returns                                                           |
;|     result : 64bit (using x87 FPU register instead of EAX)          |
;|                                                                     |
;|   +-------------------------------------------------------------+   |
;|   |                     STACK STRUCTURE                         |   |
;|   +--------+-----------------------+-------+--------------------+   |
;|   | Offset |                       | Size  |       Value        |   |
;|   +--------+-----------------------+-------+--------------------+   |
;|   | +    0 | x                     | 64bit |                    |   |
;|   +--------+-----------------------+-------+--------------------+   |
;|   | +    8 | y                     | 64bit |                    |   |
;|   +--------+-----------------------+-------+--------------------+   |
;|   | +   16 | p                     | 64bit | 0x0000000000000000 |   |
;|   +--------+-----------------------+-------+--------------------+   |
;|   | +   24 | q                     | 64bit | 0x0000000000000000 |   |
;|   +--------+-----------------------+-------+--------------------+   |
;|   | +   32 | r                     | 64bit | 0x0000000000000000 |   |
;|   +--------+-----------------------+-------+--------------------+   |
;|   | +   40 | s                     | 64bit | 0x0000000000000000 |   |
;|   +--------+-----------------------+-------+--------------------+   |
;|   | Total stack used for local variables = 48 bytes             |   |
;|   +-------------------------------------------------------------+   |
;|                                                                     |
;|   begin                                                             |
;|                                                                     |
;|       p = log2(x) * y;                                              |
;|       q = round p to the nearest;                                   |
;|       r = p - q;                                                    |
;|       s = (2^r) * (2^q);                                            |
;|                                                                     |
;|       return s;                                                     |
;|                                                                     |
;|   end.                                                              |
;|                                                                     |
;+---------------------------------------------------------------------+
;=======================================================================

