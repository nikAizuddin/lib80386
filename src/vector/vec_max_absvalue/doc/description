         1         2         3         4         5         6         7
1234567890123456789012345678901234567890123456789012345678901234567890
======================================================================

FUNCTION NAME: Vector Maximum Absolute Value

DESCRIPTION:
    Find maximum absolute value of a vector from a matrix
    (either row vector or column vector, depends on the flag).

REQUIRED EXTERNAL FILES:
    get_vector_info.asm

NOTES:
    Algorithm is in "scilab/vec_max_absvalue.sce"

----------------------------------------------------------------------

FUNCTION: vec_max_absvalue

PARAMETERS:

    EAX  = @srcMatrix  : Matrix (Input Only)
    EBX  = flag        : DWORD  (Input Only)
    ECX  = index       : DWORD  (Input Only)
    XMM0 = maxAbsValue : SCALAR SINGLE-PRECISION (Returns)

    Input parameters
        1) Memory address of source matrix
        2) Flag to determine the type of vector for source matrix
        3) Index for the source matrix, either row number or
           column number, depends on the flag value

    Output parameters
        ---

    Returns
        1) Maximum absolute value

----------------------------------------------------------------------

PARAMETER INFORMATION:

    Matrix:
        .numOfRows:    resd 1
        .numOfColumns: resd 1
        .columnSize:   resd 1
        .rowSize:      resd 1
        .pData:        resd 1

+--------------------------------------------------------------------+
|                              flag                                  |
+-----+-------+------------------------------------------------------+
| BIT | Value |                    Descriptions                      |
+-----+-------+------------------------------------------------------+
|   0 |     0 | Source matrix is row vector, e.g: A[:,i].            |
|     |       | The index value will be the column number.           |
|     +-------+------------------------------------------------------+
|     |     1 | Source matrix is column vector, e.g: A[i,:]          |
|     |       | The index value will be the row number.              |
+-----+-------+------------------------------------------------------+

----------------------------------------------------------------------

STACK MEMORY INFORMATION:

+------+----+----------------+---------------------------------------+
|Offset|Size|      Name      |              Initial value            |
+------+----+----------------+---------------------------------------+
| +  0 |  4 | pSrcMatrix     | @srcMatrix                            |
+------+----+----------------+---------------------------------------+
| +  4 |  4 | flag           | EBX                                   |
+------+----+----------------+---------------------------------------+
| +  8 |  4 | index          | ECX                                   |
+------+----+----------------+---------------------------------------+
+------+----+----------------+---------------------------------------+
| + 12 |  4 | jumpSize       | 0                                     |
+------+----+----------------+---------------------------------------+
| + 16 |  4 | numOfElems     | 0                                     |
+------+----+----------------+---------------------------------------+
| + 20 |  4 | pDataMat       | 0                                     |
+------+----+----------------+---------------------------------------+
| +    |    |                |                                       |
+------+----+----------------+---------------------------------------+
| Total stack used for local variables = 24 bytes                    |
+--------------------------------------------------------------------+
*Unit for offset & size are bytes.

======================================================================
