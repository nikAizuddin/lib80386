         1         2         3         4         5         6         7
1234567890123456789012345678901234567890123456789012345678901234567890
======================================================================

FUNCTION NAME: Vector absolute value

DESCRIPTION:
    Convert value to absolute value of a vector

REQUIRED EXTERNAL FILES:
    get_vector_info.asm

NOTES:
    Algorithm/Pseudocode is in "scilab/vec_absolute_value.sce"

----------------------------------------------------------------------

FUNCTION: vec_absolute_value

    EAX = @srcMatrix : Matrix (Input Only)
    EBX = @dstMatrix : Matrix (Input and Output)
    ECX = flag       : DWORD  (Input Only)
    EDX = srcIndex   : DWORD  (Input Only)
    ESI = dstIndex   : DWORD  (Input Only)

    Input parameters
        1) Memory address of source matrix
        2) Memory address of destination matrix
        3) Flag to determine whether to use column vector
           or row vector on the both matrices.
        4) Source index, either column number or row number.
           Depends on the flag value.
        5) Destination index, either column number or row number.
           Depends on the flag value.

    Output parameters
        2) addr_dstVec
               Will be filled with absolute values of srcMatrix.pData

    Returns
        ---

PARAMETER INFORMATION:

    Matrix:
        .numOfRows:    resd 1
        .numOfColumns: resd 1
        .columnSize:   resd 1
        .rowSize:      resd 1
        .pData:        resd 1

+--------------------------------------------------------------------+
|                              flag                                  |
+-----+-------+------------------------------------------------------+
| BIT | Value |                    Descriptions                      |
+-----+-------+------------------------------------------------------+
|   0 |     0 | Source matrix is row vector, e.g: A[:,i].            |
|     |       | The index value will be the column number.           |
|     +-------+------------------------------------------------------+
|     |     1 | Source matrix is column vector, e.g: A[i,:]          |
|     |       | The index value will be the row number.              |
+-----+-------+------------------------------------------------------+
|   1 |     0 | Destination matrix is row vector, e.g: A[:,i].       |
|     |       | The index value will be the column number.           |
|     +-------+------------------------------------------------------+
|     |     1 | Destination matrix is column vector, e.g: A[i,:]     |
|     |       | The index value will be the row number.              |
+-----+-------+------------------------------------------------------+

----------------------------------------------------------------------

STACK MEMORY INFORMATION:

+------+----+----------------+---------------------------------------+
|Offset|Size|      Name      |              Initial value            |
+------+----+----------------+---------------------------------------+
| +  0 |  4 | pSrcMatrix     | @srcMatrix                            |
+------+----+----------------+---------------------------------------+
| +  4 |  4 | pDstMatrix     | @dstMatrix                            |
+------+----+----------------+---------------------------------------+
| +  8 |  4 | flag           | ECX                                   |
+------+----+----------------+---------------------------------------+
| + 12 |  4 | srcIndex       | EDX                                   |
+------+----+----------------+---------------------------------------+
| + 16 |  4 | dstIndex       | ESI                                   |
+------+----+----------------+---------------------------------------+
+------+----+----------------+---------------------------------------+
| + 20 |  4 | srcJumpSize    | 0                                     |
+------+----+----------------+---------------------------------------+
| + 24 |  4 | srcNumOfElems  | 0                                     |
+------+----+----------------+---------------------------------------+
| + 28 |  4 | pSrcDataMat    | 0                                     |
+------+----+----------------+---------------------------------------+
| + 32 |  4 | dstJumpSize    | 0                                     |
+------+----+----------------+---------------------------------------+
| + 36 |  4 | dstNumOfElems  | 0                                     |
+------+----+----------------+---------------------------------------+
| + 40 |  4 | pDstDataMat    | 0                                     |
+------+----+----------------+---------------------------------------+
| +    |    |                |                                       |
+------+----+----------------+---------------------------------------+
| Total stack used for local variables = 44 bytes                    |
+--------------------------------------------------------------------+
*Unit for offset & size are bytes.

======================================================================
