;          1         2         3         4         5         6         7
;01234567890123456789012345678901234567890123456789012345678901234567890
;=======================================================================
;+---------------------------------------------------------------------+
;|                          append_string                              |
;|                                                                     |
;|     Use this function if you want to append the string.             |
;|                                                                     |
;|     Please read doc/description file for more info.                 |
;|                                                                     |
;+---------------------------------------------------------------------+
;| DIRECTORY INFORMATION                                               |
;|                                                                     |
;|     doc: Contains documentations about the function.                |
;| example: Some basic tutorials on how to use this function.          |
;|     src: Contains source code.                                      |
;|    test: For testing purpose, to ensure the function has no error.  |
;|                                                                     |
;+---------------------------------------------------------------------+
;| SIMPLE EXAMPLE HOW TO USE THIS FUNCTION                             |
;|                                                                     |
;| extern append_string                                                |
;| global _start                                                       |
;|                                                                     |
;| section .data                                                       |
;|                                                                     |
;|     string1: db "Hello World",\                                     |
;|                 "           " ;blank spaces. Reserved for string2.  |
;|     strlen1: dd 11                                                  |
;|                                                                     |
;|     string2: db "! I am good"                                       |
;|     strlen2: dd 11                                                  |
;|                                                                     |
;| section .text                                                       |
;|                                                                     |
;| _start:                                                             |
;|                                                                     |
;|     ; append string2 to string1                                     |
;|     sub    esp, 16                  ;reserve 16 bytes               |
;|     mov    eax, string1             ;get @string1                   |
;|     mov    ebx, strlen1             ;get @strlen1                   |
;|     mov    ecx, string2             ;get @string2                   |
;|     mov    edx, [strlen2]           ;get strlen2                    |
;|     mov    [esp     ], eax          ;arg1: @string1                 |
;|     mov    [esp +  4], ebx          ;arg2: @strlen1                 |
;|     mov    [esp +  8], ecx          ;arg3: @string2                 |
;|     mov    [esp + 12], edx          ;arg4: strlen2                  |
;|     call   append_string                                            |
;|     add    esp, 16                  ;restore 16 bytes               |
;|                                                                     |
;|     ; systemcall write string1 to stdout                            |
;|     mov    eax, 0x04                ;systemcall write               |
;|     mov    ebx, 0x01                ;write to stdout                |
;|     mov    ecx, string1             ;src = @string1                 |
;|     mov    edx, [strlen1]           ;strlen = strlen1               |
;|     int    0x80                                                     |
;|                                                                     |
;| .exit:                                                              |
;|     mov    eax, 0x01                ;systemcall exit                |
;|     xor    ebx, ebx                 ;return 0                       |
;|     int    0x80                                                     |
;|                                                                     |
;+---------------------------------------------------------------------+
;=======================================================================
