;          1         2         3         4         5         6         7
;01234567890123456789012345678901234567890123456789012345678901234567890
;=======================================================================
;+---------------------------------------------------------------------+
;| LABEL: print_int2stdout                                             |
;+---------------------------------------------------------------------+
;| ENTITY TYPE: Process                                                |
;+---------------------------------------------------------------------+
;| DESCRIPTION: <self-documented>                                      |
;+---------------------------------------------------------------------+
;| PROCESS ID: 0                                                       |
;+---------------------------------------------------------------------+
;| PROCESS DESCRIPTION:                                                |
;|                                                                     |
;|   Input  dataflows: integer_x, flag                                 |
;|   Output dataflows: value printed in stdout                         |
;|                                                                     |
;|   +-------------------------------------------------------------+   |
;|   |                     STACK STRUCTURE                         |   |
;|   +--------+----------------------------------------------------+   |
;|   | Offset |                     Data                           |   |
;|   +--------+----------------------------------------------------+   |
;|   | +    0 | integer_x                                          |   |
;|   +--------+----------------------------------------------------+   |
;|   | +    4 | flag                                               |   |
;|   +--------+----------------------------------------------------+   |
;|   | +    8 | integer_x_len                                      |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   12 | integer_x_quo                                      |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   16 | integer_x_rem                                      |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   20 | decimal_x_b0                                       |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   24 | decimal_x_b1                                       |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   28 | ascii_char                                         |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   32 | ascii_x_b0                                         |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   36 | ascii_x_b1                                         |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   40 | ascii_x_b2                                         |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   44 | ascii_x_len                                        |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   48 | is_negative                                        |   |
;|   +--------+----------------------------------------------------+   |
;|   | Total stack used for local variables = 52 bytes             |   |
;|   +-------------------------------------------------------------+   |
;|                                                                     |
;|   procedure print_int2stdout(integer_x: Longword, flag: Longword )  |
;|                                                                     |
;|   Var                                                               |
;|       integer_x_len: Longword                                       |
;|       integer_x_quo: Longword                                       |
;|       integer_x_rem: Longword                                       |
;|       decimal_x_b0: Longword                                        |
;|       decimal_x_b1: Longword                                        |
;|       ascii_char: Longword                                          |
;|       ascii_x_b0: Longword                                          |
;|       ascii_x_b1: Longword                                          |
;|       ascii_x_b2: Longword                                          |
;|       ascii_x_len: Longword                                         |
;|       is_negative: Longword                                         |
;|                                                                     |
;|   Begin                                                             |
;|                                                                     |
;|       integer_x_len := calculate_integer_length(integer_x, flag);   |
;|                                                                     |
;|       If flag = 1 Then                                              |
;|           If (integer_x & 0x80000000) <> 0 Then                     |
;|               integer_x := (not integer_x) + 1;                     |
;|               is_negative := 1;                                     |
;|                                                                     |
;|       If integer_x_len > 8 Then                                     |
;|           integer_x_quo := integer_x / 100000000;                   |
;|           integer_x_rem := remainder from the division;             |
;|           decimal_x_b0 := formula_hex2dec(integer_x_rem);           |
;|           decimal_x_b1 := formula_hex2dec(integer_x_quo);           |
;|           write_dec2string(@decimal_x_b0, 2, @ascii_x_b0,           |
;|               @ascii_x_len);                                        |
;|       Else                                                          |
;|           decimal_x_b0 := formula_hex2dec(integer_x);               |
;|           write_dec2string(@decimal_x_b0, 1, @ascii_x_b0,           |
;|               @ascii_x_len);                                        |
;|                                                                     |
;|       If is_negative = 1 Then                                       |
;|           ascii_char := 0x2d;                                       |
;|           Write(stdout, @ascii_char, 1);                            |
;|                                                                     |
;|       Write(stdout, @ascii_x_b0, ascii_x_len);                      |
;|                                                                     |
;|       ascii_char := 0x0a;                                           |
;|       Write(stdout, @ascii_char, 1);                                |
;|                                                                     |
;|   End.                                                              |
;|                                                                     |
;+---------------------------------------------------------------------+
;=======================================================================

