;          1         2         3         4         5         6         7
;01234567890123456789012345678901234567890123456789012345678901234567890
;=======================================================================
;+---------------------------------------------------------------------+
;| LABEL: print_int2string                                             |
;+---------------------------------------------------------------------+
;| ENTITY TYPE: Process                                                |
;+---------------------------------------------------------------------+
;| DESCRIPTION: <self-documented>                                      |
;+---------------------------------------------------------------------+
;| PROCESS ID: 0                                                       |
;+---------------------------------------------------------------------+
;| PROCESS DESCRIPTION:                                                |
;|                                                                     |
;|   Input  dataflows: integer_x, addr_ascii_str, addr_ascii_len, flag |
;|   Output dataflows: ascii_str, ascii_len                            |
;|                                                                     |
;|   +-------------------------------------------------------------+   |
;|   |                     STACK STRUCTURE                         |   |
;|   +--------+----------------------------------------------------+   |
;|   | Offset |                     Data                           |   |
;|   +--------+----------------------------------------------------+   |
;|   | +    0 | integer_x                                          |   |
;|   +--------+----------------------------------------------------+   |
;|   | +    4 | addr_ascii_str                                     |   |
;|   +--------+----------------------------------------------------+   |
;|   | +    8 | addr_ascii_len                                     |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   12 | flag                                               |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   16 | integer_x_len                                      |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   20 | integer_x_quo                                      |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   24 | integer_x_rem                                      |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   28 | decimal_x_b0                                       |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   32 | decimal_x_b1                                       |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   36 | ascii_x_b0                                         |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   40 | ascii_x_b1                                         |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   44 | ascii_x_b2                                         |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   48 | ascii_x_len                                        |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   52 | ascii_char                                         |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   56 | byte_pos                                           |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   60 | ctr                                                |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   64 | temp_ptr                                           |   |
;|   +--------+----------------------------------------------------+   |
;|   | +   68 | is_negative                                        |   |
;|   +--------+----------------------------------------------------+   |
;|   | Total stack used for local variables = 72 bytes             |   |
;|   +-------------------------------------------------------------+   |
;|                                                                     |
;|   procedure print_int2string(integer_x: Longword,                   |
;|                              addr_ascii_str: Longword,              |
;|                              addr_ascii_len: Longword,              |
;|                              flag: Longword)                        |
;|                                                                     |
;|   Var                                                               |
;|       integer_x_len: Longword                                       |
;|       integer_x_quo: Longword                                       |
;|       integer_x_rem: Longword                                       |
;|                                                                     |
;|       decimal_x_b0: Longword                                        |
;|       decimal_x_b1: Longword                                        |
;|                                                                     |
;|       ascii_x_b0: Longword                                          |
;|       ascii_x_b1: Longword                                          |
;|       ascii_x_b2: Longword                                          |
;|       ascii_x_len: Longword                                         |
;|                                                                     |
;|       ascii_char: Longword                                          |
;|       byte_pos: Longword                                            |
;|       ctr: Longword                                                 |
;|       temp_ptr: Longword                                            |
;|                                                                     |
;|       is_negative: Longword                                         |
;|                                                                     |
;|   Begin                                                             |
;|                                                                     |
;|       integer_x_len := calculate_integer_length(integer_x, flag);   |
;|                                                                     |
;|       If flag = 1 Then                                              |
;|           If (integer_x and 0x80000000) = 0x80000000 Then           |
;|               integer_x := (not integer_x) + 1;                     |
;|               is_negative := 1;                                     |
;|                                                                     |
;|       If integer_x_len > 8 Then                                     |
;|           integer_x_quo := integer_x / 100000000;                   |
;|           integer_x_rem := remainder from the previous division;    |
;|           decimal_x_b0 := formula_hex2dec(integer_x_rem);           |
;|           decimal_x_b1 := formula_hex2dec(integer_x_quo);           |
;|           write_dec2string(@decimal_x_b0, 2, @ascii_x_b0,           |
;|               @ascii_x_len);                                        |
;|       Else                                                          |
;|           decimal_x_b0 := formula_hex2dec(integer_x);               |
;|           write_dec2string(@decimal_x_b0, 1, @ascii_x_b0,           |
;|               @ascii_x_len);                                        |
;|                                                                     |
;|       If is_negative = 1 Then                                       |
;|           addr_ascii_str^ := 0x2d;                                  |
;|           ++ byte_pos;                                              |
;|           ++ addr_ascii_len^;                                       |
;|                                                                     |
;|       { Fill ascii string with ascii_x }                            |
;|                                                                     |
;|       ctr := ascii_x_len;                                           |
;|       temp_ptr := @ascii_x_b0;                                      |
;|       While ctr <> 0 Do                                             |
;|       Begin                                                         |
;|           If byte_pos = 4 Then                                      |
;|               addr_ascii_str := addr_ascii_str + 4;                 |
;|               byte_pos := 0;                                        |
;|           If temp_ptr^ := 0 Then                                    |
;|               temp_ptr := temp_ptr + 4;                             |
;|           ascii_char := (temp_ptr^ and 0xff) << (byte_pos*8);       |
;|           addr_ascii_str^ := addr_ascii_str^ or ascii_char;         |
;|           ++ byte_pos;                                              |
;|           ++ (addr_ascii_len^);                                     |
;|           temp_ptr^ := temp_ptr^ >> 8;                              |
;|           -- ctr;                                                   |
;|       End.                                                          |
;|                                                                     |
;|   End.                                                              |
;|                                                                     |
;+---------------------------------------------------------------------+
;=======================================================================

