         1         2         3         4         5         6         7
1234567890123456789012345678901234567890123456789012345678901234567890
======================================================================

FUNCTION NAME: QR Decomposition

DESCRIPTION:
    Calculate QR Decomposition of a square matrix.

REQUIRED EXTERNAL FILES:
    vec_copy.asm
    vec_divide_elements.asm
    vec_multiply_elements.asm
    vec_dotproduct.asm
    vec_subtract_vv.asm
    euclidean_norm.asm
    mat_set_element.asm

NOTES:
    Algorithm/Pseudocode is in "scilab/qr_decomposition.sce".

----------------------------------------------------------------------

FUNCTION: qr_decomposition

PARAMETERS:

    EAX = @srcMatrix  : Matrix (Input only)
    EBX = @Q          : Matrix (Input and Output)
    ECX = @R          : Matrix (Input and Output)
    EDX = @tempMatrix : Matrix (Input and Output)
    ESI = @tempVector : Matrix (Input and Output)

    Matrix:
        .numOfRows:     resd 1
        .numOfColumns:  resd 1
        .columnSize:    resd 1
        .rowSize:       resd 1
        .pData:         resd 1

    Input parameters
        1) Memory address of source matrix
        2) Memory address of Q matrix
        3) Memory address of R matrix
        4) Memory address of temporary matrix
        5) Memory address of temporary vector

    Output parameters
        2) Q.pData
               Will be filled with Q value of QR Decomposition.
        3) R.pData
               Will be filled with R value of QR Decomposition.
        4) tempMatrix.pData
               Temporary matrix, used for QR Decomposition.
               Must have the same size as source matrix.
        5) tempVector.pData
               Temporary vector, used for QR Decomposition.
               Must have the same columns as source matrix.

    Returns
        ---

----------------------------------------------------------------------

STACK MEMORY INFORMATION:

+------+----+----------------+---------------------------------------+
|Offset|Size|      Name      |              Initial value            |
+------+----+----------------+---------------------------------------+
| +  0 |  4 | pSrcMatrix     | @srcMatrix                            |
+------+----+----------------+---------------------------------------+
| +  4 |  4 | pQ             | @Q                                    |
+------+----+----------------+---------------------------------------+
| +  8 |  4 | pR             | @R                                    |
+------+----+----------------+---------------------------------------+
| + 12 |  4 | pTempMat       | @tempMat                              |
+------+----+----------------+---------------------------------------+
| + 16 |  4 | pTempVec       | @tempVec                              |
+------+----+----------------+---------------------------------------+
+------+----+----------------+---------------------------------------+
| + 20 |  4 | n              | srcMatrix.numOfRows                   |
+------+----+----------------+---------------------------------------+
| + 24 |  4 | rowSize        | srcMatrix.rowSize *** UNUSED ***      |
+------+----+----------------+---------------------------------------+
| + 28 |  4 | i              | 1                                     |
+------+----+----------------+---------------------------------------+
| + 32 |  4 | j              | 1                                     |
+------+----+----------------+---------------------------------------+
| + 36 |  4 | k              | 0                                     |
+------+----+----------------+---------------------------------------+
| Total stack used for local variables = 40 bytes                    |
+--------------------------------------------------------------------+
*Unit for offset & size are bytes.

======================================================================
