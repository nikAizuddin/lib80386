         1         2         3         4         5         6         7
1234567890123456789012345678901234567890123456789012345678901234567890
======================================================================

           FUNCTION: _start

        DESCRIPTION: Program's main function

           REQUIRES: read4096b_stdin.asm,
                     string_append.asm,
                     cvt_string2int.asm,
                     cvt_string2dec.asm,
                     cvt_dec2hex.asm,
                     cvt_hex2dec.asm,
                     cvt_dec2string.asm,
                     cvt_int2string.asm,
                     find_int_digits.asm,
                     pow_int.asm

               BUGS: ---

FUTURE IMPROVEMENTS: ---

----------------------------------------------------------------------

PROCESS DESCRIPTION:

  +----------------------------------------------------------------+
  |                   BSS SEGMENT INFORMATION                      |
  +-----------------+----------------------------------------------+
  |     Data        |                 Value                        |
  +-----------------+----------------------------------------------+
  | rb              |                 resd 1025                    |
  | rb_ptr          |                 resd 1                       |
  | rb_byte_pos     |                 resd 1                       |
  +-----------------+----------------------------------------------+
  | n_str           |                 resd 3                       |
  | n_strlen        |                 resd 1                       |
  | n               |                 resd 1                       |
  +-----------------+----------------------------------------------+
  | k_str           |                 resd 3                       |
  | k_strlen        |                 resd 1                       |
  | k               |                 resd 1                       |
  +-----------------+----------------------------------------------+
  | t_str           |                 resd 3                       |
  | t_strlen        |                 resd 1                       |
  | t               |                 resd 1                       |
  +-----------------+----------------------------------------------+
  | i               |                 resd 1                       |
  +-----------------+----------------------------------------------+
  | result_str      |                 resd 3                       |
  | result_strlen   |                 resd 1                       |
  | result          |                 resd 1                       |
  +-----------------+----------------------------------------------+

  +----------------------------------------------------------------+
  |                 RODATA SEGMENT INFORMATION                     |
  +---------+--------+---------------------------------------------+
  |  Data   |  Size  |                   Value                     |
  +---------+--------+---------------------------------------------+
  | newline | 32-bit |                0x0000000a                   |
  +---------+--------+---------------------------------------------+

       begin

           ##
           ## Get n
           ##

  001:     n_str = 0;
  002:     read4096b_stdin( @rb,
                            @rb_ptr,
                            @rb_byte_pos,
                            @n_str,
                            @n_strlen,
                            0 );
  003:     n = cvt_string2int( @n_str, n_strlen );

           ##
           ## Get k
           ##

  004:     k_str = 0;
  005:     read4096b_stdin( @rb,
                            @rb_ptr,
                            @rb_byte_pos,
                            @k_str,
                            @k_strlen,
                            0 );
  006:     k = cvt_string2int( @k_str, k_strlen );

           ##
           ## Mainloop begin
           ##

  007:     if n != 0, goto .dont_exit_program;
           .exit_program:
  008:         goto .exit;
           .dont_exit_program:

  009:     i = n;
           .loop:

  010:         t_str = 0;
  011:         read4096b_stdin( @rb,
                                @rb_ptr,
                                @rb_byte_pos,
                                @t_str,
                                @t_strlen,
                                0 );
  012:         t = cvt_string2int( @t_str, t_strlen );

  013:         t / k;
  014:         if EDX != 0, goto .not_divisible;
               .divisible:
  015:             ++ result;
               .not_divisible:

  016:         -- i;
  017:         if i != 0, goto .loop;

           .endloop:

           .exit:

  018:         cvt_int2string( result,
                               @result_str,
                               @result_strlen,
                               0 );

  019:         string_append( @result_str,
                              @result_strlen,
                              @newline,
                              1 );

  020:         write( stdout, @result_str, result_strlen );

       end.

======================================================================
